/*
检查不同类型的数据在内存中占的字节数。编写程序。
显示整型、长整型、字符型、逻辑型、浮点型和双精度型数据的类型名称和所占字节数。
(问题分析) sizeof()，它计算括号中的类型、变量或表达式结果占的字节数。
(运行结果)
	short int 2
	char 1
	long int 4
	int 4
	double 8
	bool 1
	float 4 
*/
#include <iostream>
using namespace std;
int main()//不用必须定义n，可以将sizeof直接放在cout 
{
	int n,m;
	n=sizeof(int);//以int，bool为例 
	m=sizeof(bool);
	cout<<"int\t"<<n<<"\n"<<"bool\t"<<m;
	/*
	\n换行 
	 
    \r回车，先显示\r之前的，再覆盖之后的。例如
	“abcde\r123”显示为123de
 
	\t水平制表符，即不用数空格即可标齐 ，例如
	“123 \t 8 \t 89 \n 啊 \t 564 \t 5”显示为
	123  8    89
	啊   564  5 
	\v垂直制表 
 
	\f分页符 在打印机上\f前后的内容打印在两页上
	 
	\b退格符 即删除一个，例如
	“12345\b”显示为1234 
	 
	 \\在C++里\具有意义，所以要显示\需要用\\表示
	 
	 \' \" 与\\同理
	 
	 \0字符串结束标志，该语句中之后的不起任何作用
	 
	 \ 后边加三位数（0-7之间，数值小于128）被认为是八进制ASCII码，
	 \x后边加；两位数（0-9之间）或字母A-F被认为是十六进制ASCII码。  
	  
	*/
	return 0;
 } 
